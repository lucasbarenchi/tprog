
package com.main.server.implementation;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

import com.uytube.PropertiesLoader;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "UserWebServiceImplService", targetNamespace = "http://implementation.server.main.com/")
public class UserWebServiceImplService
    extends Service
{

    private static URL USERWEBSERVICEIMPLSERVICE_WSDL_LOCATION;
    private static WebServiceException USERWEBSERVICEIMPLSERVICE_EXCEPTION;
    private final static QName USERWEBSERVICEIMPLSERVICE_QNAME = new QName("http://implementation.server.main.com/", "UserWebServiceImplService");

    public UserWebServiceImplService() {
        super(__getWsdlLocation(), USERWEBSERVICEIMPLSERVICE_QNAME);
    }

    public UserWebServiceImplService(WebServiceFeature... features) {
        super(__getWsdlLocation(), USERWEBSERVICEIMPLSERVICE_QNAME, features);
    }

    public UserWebServiceImplService(URL wsdlLocation) {
        super(wsdlLocation, USERWEBSERVICEIMPLSERVICE_QNAME);
    }

    public UserWebServiceImplService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, USERWEBSERVICEIMPLSERVICE_QNAME, features);
    }

    public UserWebServiceImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public UserWebServiceImplService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns UserWebService
     */
    @WebEndpoint(name = "UserWebServiceImplPort")
    public UserWebService getUserWebServiceImplPort() {
        return super.getPort(new QName("http://implementation.server.main.com/", "UserWebServiceImplPort"), UserWebService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UserWebService
     */
    @WebEndpoint(name = "UserWebServiceImplPort")
    public UserWebService getUserWebServiceImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://implementation.server.main.com/", "UserWebServiceImplPort"), UserWebService.class, features);
    }

    private static URL __getWsdlLocation() {
    	URL url = null;
        WebServiceException e = null;
        try {
        	PropertiesLoader pl = new PropertiesLoader();
            url = new URL(String.format("http://%s:%s/uytube/user?wsdl", pl.getIP(), pl.getPort()));
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        } catch (Exception ex) {
        	System.out.println("Failed to read properties");
        	ex.printStackTrace();
        }
        USERWEBSERVICEIMPLSERVICE_WSDL_LOCATION = url;
        USERWEBSERVICEIMPLSERVICE_EXCEPTION = e;
        
        if (USERWEBSERVICEIMPLSERVICE_EXCEPTION!= null) {
            throw USERWEBSERVICEIMPLSERVICE_EXCEPTION;
        }
        return USERWEBSERVICEIMPLSERVICE_WSDL_LOCATION;
    }

}
