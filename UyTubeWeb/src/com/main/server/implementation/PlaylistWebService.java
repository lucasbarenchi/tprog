
package com.main.server.implementation;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import com.main.server.service.ObjectFactory;
import com.main.server.service.Playlists;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "PlaylistWebService", targetNamespace = "http://service.server.main.com/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PlaylistWebService {


    /**
     * 
     * @param nickname
     * @return
     *     returns com.main.server.service.Playlists
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://service.server.main.com/PlaylistWebService/listPlaylistNotFromUserRequest", output = "http://service.server.main.com/PlaylistWebService/listPlaylistNotFromUserResponse")
    public Playlists listPlaylistNotFromUser(
        @WebParam(name = "nickname", partName = "nickname")
        String nickname);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws EntityNotFoundException
     * @throws KeyAlreadyInUseException
     */
    @WebMethod
    @Action(input = "http://service.server.main.com/PlaylistWebService/addVideoToPlaylistRequest", output = "http://service.server.main.com/PlaylistWebService/addVideoToPlaylistResponse", fault = {
        @FaultAction(className = KeyAlreadyInUseException.class, value = "http://service.server.main.com/PlaylistWebService/addVideoToPlaylist/Fault/KeyAlreadyInUseException"),
        @FaultAction(className = EntityNotFoundException.class, value = "http://service.server.main.com/PlaylistWebService/addVideoToPlaylist/Fault/EntityNotFoundException")
    })
    public void addVideoToPlaylist(
        @WebParam(name = "arg0", partName = "arg0")
        long arg0,
        @WebParam(name = "arg1", partName = "arg1")
        long arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2)
        throws EntityNotFoundException, KeyAlreadyInUseException
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns com.main.server.service.Playlists
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://service.server.main.com/PlaylistWebService/listPlaylistByUserRequest", output = "http://service.server.main.com/PlaylistWebService/listPlaylistByUserResponse")
    public Playlists listPlaylistByUser(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws PrivacyException
     * @throws EntityNotFoundException
     * @throws KeyAlreadyInUseException
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://service.server.main.com/PlaylistWebService/createParticularPlaylistRequest", output = "http://service.server.main.com/PlaylistWebService/createParticularPlaylistResponse", fault = {
        @FaultAction(className = EntityNotFoundException.class, value = "http://service.server.main.com/PlaylistWebService/createParticularPlaylist/Fault/EntityNotFoundException"),
        @FaultAction(className = KeyAlreadyInUseException.class, value = "http://service.server.main.com/PlaylistWebService/createParticularPlaylist/Fault/KeyAlreadyInUseException"),
        @FaultAction(className = PrivacyException.class, value = "http://service.server.main.com/PlaylistWebService/createParticularPlaylist/Fault/PrivacyException")
    })
    public boolean createParticularPlaylist(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        boolean arg2)
        throws EntityNotFoundException, KeyAlreadyInUseException, PrivacyException
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns com.main.server.service.Playlists
     * @throws EntityNotFoundException
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://service.server.main.com/PlaylistWebService/listPlaylistByCategoryRequest", output = "http://service.server.main.com/PlaylistWebService/listPlaylistByCategoryResponse", fault = {
        @FaultAction(className = EntityNotFoundException.class, value = "http://service.server.main.com/PlaylistWebService/listPlaylistByCategory/Fault/EntityNotFoundException")
    })
    public Playlists listPlaylistByCategory(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws EntityNotFoundException
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://service.server.main.com/PlaylistWebService/removeFromPlaylistRequest", output = "http://service.server.main.com/PlaylistWebService/removeFromPlaylistResponse")
    public boolean removeFromPlaylist(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        long arg2);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws PrivacyException
     * @throws EntityNotFoundException
     * @throws DefaultPlaylistException
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://service.server.main.com/PlaylistWebService/modifyPlaylistRequest", output = "http://service.server.main.com/PlaylistWebService/modifyPlaylistResponse", fault = {
        @FaultAction(className = EntityNotFoundException.class, value = "http://service.server.main.com/PlaylistWebService/modifyPlaylist/Fault/EntityNotFoundException"),
        @FaultAction(className = DefaultPlaylistException.class, value = "http://service.server.main.com/PlaylistWebService/modifyPlaylist/Fault/DefaultPlaylistException"),
        @FaultAction(className = PrivacyException.class, value = "http://service.server.main.com/PlaylistWebService/modifyPlaylist/Fault/PrivacyException")
    })
    public boolean modifyPlaylist(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        boolean arg2)
        throws DefaultPlaylistException, EntityNotFoundException, PrivacyException
    ;

}
